let espantalho;
let corvos = [];
let milho = [];
let vidas;
let tempoSpawn = 120;
let contador = 0;
let estado = "inicio"; // pode ser "inicio", "jogando", "fim"

function setup() {
  createCanvas(700, 400);
  iniciarJogo();
}

function iniciarJogo() {
  // Estado inicial do jogo
  espantalho = new Espantalho(width / 2, height - 70);
  corvos = [];
  milho = [];
  vidas = 3;
  contador = 0;

  for (let i = 0; i < 5; i++) {
    milho.push(createVector(100 + i * 120, height - 30));
  }
}

function draw() {
  background(180, 220, 120);

  if (estado === "inicio") {
    telaInicial();
  } else if (estado === "jogando") {
    jogar();
  } else if (estado === "fim") {
    telaFinal();
  }
}

// TELAS
function telaInicial() {
  textAlign(CENTER);
  fill(70, 50, 20);
  textSize(40);
  text("🌽 Espantalho Defensor 🐦", width / 2, height / 2 - 60);

  fill(0);
  textSize(20);
  text("Clique para jogar", width / 2, height / 2);
}

function telaFinal() {
  textAlign(CENTER);
  fill(200, 0, 0);
  textSize(40);
  text("Você perdeu!", width / 2, height / 2 - 40);

  fill(0);
  textSize(20);
  text("Clique para reiniciar", width / 2, height / 2 + 20);
}

function jogar() {
  // Chão
  noStroke();
  fill(100, 70, 30);
  rect(0, height - 50, width, 50);

  // Plantações
  for (let m of milho) {
    fill(255, 230, 100);
    ellipse(m.x, m.y, 30, 40);
    stroke(0);
    line(m.x, m.y, m.x, m.y - 20);
  }

  // Espantalho segue mouse
  espantalho.atualizar(mouseX);
  espantalho.mostrar();

  // Criar corvos
  contador++;
  if (contador > tempoSpawn) {
    corvos.push(new Corvo(random(width), -30, random(milho)));
    contador = 0;
  }

  // Corvos
  for (let i = corvos.length - 1; i >= 0; i--) {
    corvos[i].mostrar();
    corvos[i].atualizar();

    if (corvos[i].colidiuCom(espantalho)) {
      corvos.splice(i, 1);
    } else if (corvos[i].y > height - 50) {
      vidas--;
      corvos.splice(i, 1);
    }
  }

  // Vidas
  fill(0);
  textSize(20);
  text("Vidas: " + vidas, 50, 30);

  if (vidas <= 0) {
    estado = "fim";
  }
}

// CLICAR PARA INICIAR/REINICIAR
function mousePressed() {
  if (estado === "inicio") {
    iniciarJogo();
    estado = "jogando";
  } else if (estado === "fim") {
    iniciarJogo();
    estado = "jogando";
  }
}

// CLASSES
class Espantalho {
  constructor(x, y) {
    this.x = x;
    this.y = y;
  }

  atualizar(novaX) {
    this.x = constrain(novaX, 20, width - 20);
  }

  mostrar() {
    fill(180, 100, 50);
    rect(this.x - 10, this.y - 30, 20, 40);
    fill(255, 220, 180);
    ellipse(this.x, this.y - 40, 20, 20);
    stroke(0);
    line(this.x - 20, this.y - 20, this.x + 20, this.y - 20);
  }
}

class Corvo {
  constructor(x, y, alvo) {
    this.x = x;
    this.y = y;
    this.vel = 2;
    this.alvo = alvo;
  }

  mostrar() {
    fill(0);
    ellipse(this.x, this.y, 20, 15);
    triangle(this.x, this.y, this.x - 10, this.y - 5, this.x - 10, this.y + 5);
  }

  atualizar() {
    this.y += this.vel;
    this.x += (this.alvo.x - this.x) * 0.02;
  }

  colidiuCom(espantalho) {
    return dist(this.x, this.y, espantalho.x, espantalho.y - 20) < 25;
  }
}
